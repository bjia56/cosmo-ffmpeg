name: Build FFmpeg

on:
  workflow_dispatch:
    inputs:
      debug:
        required: false
        type: boolean
      debug_interactive:
        required: false
        type: boolean
  workflow_call:
    inputs:
      debug:
        required: false
        type: boolean
      debug_interactive:
        required: false
        type: boolean

env:
  DEBUG_CI: ${{ inputs.debug }}

jobs:
  build_cosmo:
    name: Cosmopolitan FFmpeg (build)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]
    steps:
      - name: Set up cosmocc
        uses: bjia56/setup-cosmocc@v0.0.3
        with:
          version: 3.5.4

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          ./scripts/build_cosmo.sh ${{ matrix.arch }}

      - name: Interactive debugging
        if: ${{ always() && inputs.debug_interactive }}
        uses: fawazahmed0/action-debug@v2

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ matrix.arch }}
          path: ./ffmpeg

      - name: Upload artifacts
        if: ${{ always()  && inputs.debug }}
        uses: actions/upload-artifact@v4
        with:
          name: build-ffmpeg-${{ matrix.arch }}
          path: ./build-ffmpeg.tar.gz

  link_cosmo:
    name: Cosmopolitan FFmpeg (link)
    runs-on: ubuntu-latest
    steps:
      - name: Set up cosmocc
        uses: bjia56/setup-cosmocc@v0.0.3
        with:
          version: 3.5.4

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-x86_64
          path: ./ffmpeg-x86_64

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg-aarch64
          path: ./ffmpeg-aarch64

      - name: Link
        run: |
          COSMO=$(dirname $(which cosmocc))
          apelink -l "$COSMO/ape-x86_64.elf" \
            -l "$COSMO/ape-aarch64.elf" \
            -M "$COSMO/ape-m1.c" \
            -o ffmpeg.com \
            ./ffmpeg-x86_64/ffmpeg ./ffmpeg-aarch64/ffmpeg

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg
          path: ./ffmpeg.com

  test_cosmo:
    name: Cosmopolitan FFmpeg ${{ matrix.os }} ${{ matrix.arch }} (test)
    needs: link_cosmo
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: macos-14
            arch: arm64
            os: MacOS
          - runner: ubuntu-latest
            arch: x86_64
            os: Linux
          - runner: windows-latest
            arch: x86_64
            os: Windows
          - runner: ubuntu-latest
            arch: x86_64
            os: FreeBSD
          - runner: ubuntu-latest
            arch: x86_64
            os: NetBSD
          - runner: ubuntu-latest
            arch: x86_64
            os: OpenBSD

    steps:
      - name: Set up cosmocc
        if: ${{ matrix.os == 'Linux' }}
        uses: bjia56/setup-cosmocc@v0.0.3

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ffmpeg
          path: ./ffmpeg

      - name: Test locally
        if: ${{ !contains(matrix.os, 'BSD') }}
        shell: bash
        run: |
          chmod +x ./ffmpeg/ffmpeg.com
          ./ffmpeg/ffmpeg.com

      - name: Test in VM
        if: ${{ matrix.os == 'FreeBSD' }}
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          copyback: false
          run: |
            chmod +x ./ffmpeg/ffmpeg.com
            ./ffmpeg/ffmpeg.com

      - name: Test in VM
        if: ${{ matrix.os == 'NetBSD' }}
        uses: vmactions/netbsd-vm@v1
        with:
          usesh: true
          copyback: false
          run: |
            chmod +x ./ffmpeg/ffmpeg.com
            ./ffmpeg/ffmpeg.com

      - name: Test in VM
        if: ${{ matrix.os == 'OpenBSD' }}
        uses: vmactions/openbsd-vm@v1
        with:
          usesh: true
          copyback: false
          run: |
            chmod +x ./ffmpeg/ffmpeg.com
            ./ffmpeg/ffmpeg.com
